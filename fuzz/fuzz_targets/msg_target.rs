// This file is auto-generated by gen_target.sh based on msg_target_template.txt
// To modify it, modify msg_target_template.txt and run gen_target.sh instead.

extern crate bgp_rs;
use bgp_rs::Capabilities;
use bgp_rs::Reader;

#[inline]
pub fn do_test(data: &[u8]) {
    if data.len() < 2 { return; }
    let cap_byte = data[0];
    let _ = Reader {
        stream: & data[1..],
        capabilities: Capabilities {
            FOUR_OCTET_ASN_SUPPORT: (cap_byte & 0b1) == 0b1,
            EXTENDED_PATH_NLRI_SUPPORT: (cap_byte & 0b10) == 0b10,
        }
    }.read();
}

#[cfg(feature = "afl")]
#[macro_use] extern crate afl;
#[cfg(feature = "afl")]
fn main() {
    fuzz!(|data| {
        do_test(data);
    });
}

#[cfg(feature = "honggfuzz")]
#[macro_use] extern crate honggfuzz;
#[cfg(feature = "honggfuzz")]
fn main() {
    loop {
        fuzz!(|data| {
            do_test(data);
        });
    }
}

extern crate hex;
#[cfg(test)]
mod tests {
    #[test]
    fn duplicate_crash() {
        super::do_test(&::hex::decode("3a00c52d1e00d9197f2d2d01ff000000000040020000000a000000001ab1f600000000").unwrap());
    }
}
